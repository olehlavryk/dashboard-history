{"version":3,"sources":["types/index.js","api/index.js","actions/index.js","selectors/index.js","components/Header/Header.js","components/Cell/Cell.js","components/Field/Field.js","components/History/History.js","components/App/App.js","components/App/AppContainer.js","reducer/index.js","index.js","store/index.js"],"names":["SET_DATA","SET_MODE","SET_STATUS","ADD_TO_HISTORY","RESET_PROCESS","api","axios","get","then","response","data","fetchData","dispatch","type","actionType","payload","setData","catch","getModes","state","modes","getMode","mode","getStatus","status","getHistory","history","Header","useDispatch","useSelector","handleChange","useCallback","event","setMode","target","value","handleStartProcess","preventDefault","setStatus","handleStopProcess","buildOptions","options","Object","entries","modeName","replace","trim","toLowerCase","charAt","toUpperCase","slice","push","className","onChange","defaultValue","disabled","onClick","memo","Cell","x","y","onMouseEnterHandler","text","onMouseEnter","Field","renderTable","table","i","children","j","History","length","reverse","map","item","index","App","useEffect","AppContainer","store","initialState","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","next","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEaA,EAAW,UACXC,EAAW,UACXC,EAAa,YACbC,EAAiB,eACjBC,EAAgB,e,iBCIhBC,EANG,WACd,OAAOC,IAAMC,IAHH,oCAGYC,MAAK,SAACC,GAC1B,OAAOA,EAASC,SCqBPC,EAAY,kBAAM,SAACC,GAAD,OAC7BP,IAEGG,MAAK,SAACE,GACLE,EAAS,CAAEC,KF/BiB,qBEgC5BD,EA7BiB,SAACF,GAAD,MAAW,CAChCG,KAAMC,EACNC,QAAS,CAAEL,SA2BEM,CAAQN,OAElBO,OAAM,kBAAML,EAAS,CAAEC,KFjCG,uBGDlBK,EAAW,SAACC,GAAD,OAAWA,EAAMC,OAC5BC,EAAU,SAACF,GAAD,OAAWA,EAAMG,MAC3BC,EAAY,SAACJ,GAAD,OAAWA,EAAMK,QAC7BC,EAAa,SAACN,GAAD,OAAWA,EAAMO,SCGrCC,G,MAAS,WACb,IAAMf,EAAWgB,cACXR,EAAQS,YAAYX,GACpBI,EAAOO,YAAYR,GACnBG,EAASK,YAAYN,GAErBO,EAAeC,uBACnB,SAACC,GACCpB,EFPiB,SAACU,GAAD,MAAW,CAChCT,KAAMC,EACNC,QAAS,CAAEO,SEKEW,CAAQD,EAAME,OAAOC,UAEhC,CAACvB,IAGGwB,EAAqBL,uBACzB,SAACC,GACKA,GAAOA,EAAMK,iBAEjBzB,EFXmB,SAACY,GAAD,MAAa,CACpCX,KAAMC,EACNC,QAAS,CAAES,WESEc,EAAWd,MAEtB,CAACZ,EAAUY,IAGPe,EAAoBR,uBACxB,SAACC,GACKA,GAAOA,EAAMK,iBACjBzB,EFT6B,CACjCC,KAAMC,EACNC,QAAS,OESP,CAACH,IAGG4B,EAAeT,uBAAY,SAACX,GAEhC,IADA,IAAMqB,EAAU,GAChB,MAAkBC,OAAOC,QAAQvB,GAAjC,eAAyC,CAApC,IAAIe,EAAK,KAERS,EAAWT,EAAM,GAClBU,QAAQ,WAAY,OACpBC,OACAC,cAEHH,EAAWA,EAASI,OAAO,GAAGC,cAAgBL,EAASM,MAAM,GAE7DT,EAAQU,KACN,wBAAgChB,MAAOA,EAAM,GAAN,MAAvC,SACGS,GADUT,EAAM,GAAN,QAKjB,OAAOM,IACN,IAEH,OACE,wBAAQW,UAAU,SAAlB,SACE,uBAAMA,UAAU,aAAhB,UACE,qBAAKA,UAAU,SAAf,SACE,yBACEC,SAAUvB,EACVK,MAAOb,EACP8B,UAAU,qBAHZ,UAKE,wBAAQjB,MAAM,GAAGmB,cAAY,EAACC,UAAQ,EAAtC,uBAGCf,EAAapB,QAGhBI,EASA,wBACEgC,QAASjB,EACTa,UAAU,6CACVG,UAAWjC,EAHb,kBARA,wBACEkC,QAASpB,EACTgB,UAAU,8CACVG,UAAWjC,EAHb,0BAqBKmC,iBAAK9B,GCzFd+B,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACXhD,EAAWgB,cAEXiC,EAAsB9B,uBAAY,WHUd,IAAC+B,EGTzBlD,GHSyBkD,EGTH,OAAD,OAAQH,EAAR,gBAAiBC,GHSH,CACrC/C,KAAMC,EACNC,QAAS,CAAE+C,aGVR,CAAClD,IAEJ,OAAO,oBAAImD,aAAcF,KAGZJ,iBAAKC,GCPdM,G,MAAQ,WACZ,IAAM1C,EAAOO,YAAYR,GACnBG,EAASK,YAAYN,GAErB0C,EAAclC,uBAAY,SAACT,GAC/B,IAAI4C,EAAQ,GAEZ,GAAI5C,EAEF,IAAK,IAAI6C,EAAI,EAAGA,EAAI7C,EAAM6C,IAAK,CAG7B,IAFA,IAAIC,EAAW,GAENC,EAAI,EAAGA,EAAI/C,EAAM+C,IACxBD,EAASjB,KAAK,cAAC,EAAD,CAAcQ,EAAGQ,EAAI,EAAGP,EAAGS,EAAI,GAApBA,IAG3BH,EAAMf,KAAK,6BAAaiB,GAAJD,IAIxB,OAAOD,IACN,IAEH,OACE,uBAAMd,UAAU,cAAhB,UACE,cAAC,EAAD,IAEC5B,GACC,uBAAO4B,UAAU,iBAAjB,SACE,gCAAQa,EAAY3C,YAOfmC,iBAAKO,GCtCdM,G,MAAU,WACd,IAAM5C,EAAUG,YAAYJ,GAE5B,OAAuB,IAAnBC,EAAQ6C,OAER,wBAAOnB,UAAU,UAAjB,UACE,yCACA,uDAMJ,wBAAOA,UAAU,UAAjB,UACE,yCACA,oBAAIA,UAAU,gBAAd,SACG1B,EACEwB,MAAM,GACNsB,UACAC,KAAI,SAACC,EAAMC,GAAP,OACH,6BACE,qBAAKvB,UAAU,iBAAf,SAAiCsB,KAD1BC,aASNlB,iBAAKa,GC1BdM,G,MAAM,WACV,IAAMhE,EAAWgB,cACXR,EAAQS,YAAYX,GAQ1B,OANA2D,qBAAU,WACHzD,GACHR,EAASD,OAEV,CAACC,EAAUQ,IAETA,EAKH,sBAAKgC,UAAU,YAAf,UACE,oDACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UARG,gDAcIK,iBAAKmB,GC7BdE,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,cAAC,IAAD,CAAUA,MAAOA,EAAjB,SACE,cAAC,EAAD,OAKStB,iBAAKqB,G,sCCVdE,EAAe,CACnB5D,MAAO,KACPE,KAAM,GACNE,QAAQ,EACRE,QAAS,IAGEuD,EAAU,WAA8C,IAA7C9D,EAA4C,uDAApC6D,EAAoC,yCAApBnE,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACpD,OAAQF,GACN,KAAKC,EACH,OAAO,2BACFK,GADL,IAEEG,KAAM,GACNE,QAAQ,EACRE,QAAS,KAIb,KAAKZ,EAAsB,IACjBJ,EAASK,EAATL,KAER,OAAO,2BACFS,GADL,IAEEC,MAAOV,IAIX,KAAKI,EAAsB,IACjBQ,EAASP,EAATO,KAER,OAAO,2BACFH,GADL,IAEEG,OACAI,QAAS,KAIb,KAAKZ,EAAwB,IACnBU,EAAWT,EAAXS,OAER,OAAO,2BACFL,GADL,IAEEK,WAIJ,KAAKV,EAA4B,IACvBgD,EAAS/C,EAAT+C,KACFpC,EAAO,sBAAOP,EAAMO,SAAb,CAAsBoC,IAEnC,OAAO,2BACF3C,GADL,IAEEO,YAIJ,QACE,OAAOP,ICtDP4D,ECIGG,sBACLD,EACAE,8BAAoBC,0BAAgBC,KALnB,kBAAM,SAACC,GAAD,OAAU,SAACC,GAClC,OAAOD,EAAKC,UDAhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKX,MAAOA,MAEdY,SAASC,eAAe,W","file":"static/js/main.7ca0a956.chunk.js","sourcesContent":["export const FETCH_DATA_SUCCESS = \"fetchDataSuccess\";\r\nexport const FETCH_DATA_FAIL = \"fetchDataFail\";\r\nexport const SET_DATA = \"setData\";\r\nexport const SET_MODE = \"setMode\";\r\nexport const SET_STATUS = \"setStatus\";\r\nexport const ADD_TO_HISTORY = \"addToHistory\";\r\nexport const RESET_PROCESS = \"resetProcess\";\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://demo1030918.mockable.io/\";\r\n\r\nconst getData = () => {\r\n  return axios.get(url).then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nexport const api = {\r\n  getData,\r\n};\r\n","import * as actionType from \"src/types\";\r\nimport { api } from \"src/api\";\r\n\r\nexport const setData = (data) => ({\r\n  type: actionType.SET_DATA,\r\n  payload: { data },\r\n});\r\nexport const setMode = (mode) => ({\r\n  type: actionType.SET_MODE,\r\n  payload: { mode },\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n  type: actionType.SET_STATUS,\r\n  payload: { status },\r\n});\r\n\r\nexport const addToHistory = (text) => ({\r\n  type: actionType.ADD_TO_HISTORY,\r\n  payload: { text },\r\n});\r\n\r\nexport const resetProcess = () => ({\r\n  type: actionType.RESET_PROCESS,\r\n  payload: {},\r\n});\r\n\r\nexport const fetchData = () => (dispatch) =>\r\n  api\r\n    .getData()\r\n    .then((data) => {\r\n      dispatch({ type: actionType.FETCH_DATA_SUCCESS });\r\n      dispatch(setData(data));\r\n    })\r\n    .catch(() => dispatch({ type: actionType.FETCH_DATA_FAIL }));\r\n","export const getModes = (state) => state.modes;\r\nexport const getMode = (state) => state.mode;\r\nexport const getStatus = (state) => state.status;\r\nexport const getHistory = (state) => state.history;\r\n","import React, { useCallback, memo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setMode, setStatus, resetProcess } from \"src/actions\";\r\nimport { getModes, getMode, getStatus } from \"src/selectors\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const modes = useSelector(getModes);\r\n  const mode = useSelector(getMode);\r\n  const status = useSelector(getStatus);\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      dispatch(setMode(event.target.value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleStartProcess = useCallback(\r\n    (event) => {\r\n      if (event) event.preventDefault();\r\n\r\n      dispatch(setStatus(!status));\r\n    },\r\n    [dispatch, status]\r\n  );\r\n\r\n  const handleStopProcess = useCallback(\r\n    (event) => {\r\n      if (event) event.preventDefault();\r\n      dispatch(resetProcess());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const buildOptions = useCallback((modes) => {\r\n    const options = [];\r\n    for (let value of Object.entries(modes)) {\r\n      // prepare mode name\r\n      let modeName = value[0]\r\n        .replace(/([A-Z])/g, \" $1\")\r\n        .trim()\r\n        .toLowerCase();\r\n\r\n      modeName = modeName.charAt(0).toUpperCase() + modeName.slice(1);\r\n\r\n      options.push(\r\n        <option key={value[1][\"field\"]} value={value[1][\"field\"]}>\r\n          {modeName}\r\n        </option>\r\n      );\r\n    }\r\n    return options;\r\n  }, []);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <form className=\"game__form\">\r\n        <div className=\"select\">\r\n          <select\r\n            onChange={handleChange}\r\n            value={mode}\r\n            className=\"game__form__select\"\r\n          >\r\n            <option value=\"\" defaultValue disabled>\r\n              Pick mode\r\n            </option>\r\n            {buildOptions(modes)}\r\n          </select>\r\n        </div>\r\n        {!status ? (\r\n          <button\r\n            onClick={handleStartProcess}\r\n            className=\"button button__primary game__button__select\"\r\n            disabled={!mode}\r\n          >\r\n            Start\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={handleStopProcess}\r\n            className=\"button button__danger game__button__select\"\r\n            disabled={!mode}\r\n          >\r\n            Stop\r\n          </button>\r\n        )}\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default memo(Header);\r\n","import React, { useCallback, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToHistory } from \"src/actions\";\r\n\r\nconst Cell = ({ x, y }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onMouseEnterHandler = useCallback(() => {\r\n    dispatch(addToHistory(`row ${x} col ${y}`));\r\n  }, [dispatch]);\r\n\r\n  return <td onMouseEnter={onMouseEnterHandler}></td>;\r\n};\r\n\r\nexport default memo(Cell);\r\n","import React, { useCallback, memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getMode, getStatus } from \"src/selectors\";\r\nimport Header from \"src/components/Header/Header\";\r\nimport Cell from \"src/components/Cell/Cell\";\r\nimport \"./Field.css\";\r\n\r\nconst Field = () => {\r\n  const mode = useSelector(getMode);\r\n  const status = useSelector(getStatus);\r\n\r\n  const renderTable = useCallback((mode) => {\r\n    let table = [];\r\n\r\n    if (mode) {\r\n      // Outer loop to create parent\r\n      for (let i = 0; i < mode; i++) {\r\n        let children = [];\r\n        //Inner loop to create children\r\n        for (let j = 0; j < mode; j++) {\r\n          children.push(<Cell key={j} x={i + 1} y={j + 1} />);\r\n        }\r\n        //Create the parent and add the children\r\n        table.push(<tr key={i}>{children}</tr>);\r\n      }\r\n    }\r\n\r\n    return table;\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"field__wrap\">\r\n      <Header />\r\n\r\n      {status && (\r\n        <table className=\"squares__table\">\r\n          <tbody>{renderTable(mode)}</tbody>\r\n        </table>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default memo(Field);\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getHistory } from \"src/selectors\";\r\nimport \"./History.css\";\r\n\r\nconst History = () => {\r\n  const history = useSelector(getHistory);\r\n\r\n  if (history.length === 0) {\r\n    return (\r\n      <aside className=\"history\">\r\n        <h2>History</h2>\r\n        <small>No history yet!</small>\r\n      </aside>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <aside className=\"history\">\r\n      <h2>History</h2>\r\n      <ul className=\"history__list\">\r\n        {history\r\n          .slice(0)\r\n          .reverse()\r\n          .map((item, index) => (\r\n            <li key={index}>\r\n              <div className=\"history__alert\">{item}</div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default memo(History);\r\n","import React, { useEffect, memo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"src/actions\";\nimport { getModes } from \"src/selectors\";\nimport Field from \"src/components/Field/Field\";\nimport History from \"src/components/History/History\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const modes = useSelector(getModes);\n\n  useEffect(() => {\n    if (!modes) {\n      dispatch(fetchData());\n    }\n  }, [dispatch, modes]);\n\n  if (!modes) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>StarNavi test task</h1>\n      <div className=\"app\">\n        <Field />\n        <History />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(App);\n","import React, { memo } from \"react\";\r\nimport App from \"src/components/App/App\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst AppContainer = ({ store }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default memo(AppContainer);\r\n","import * as actionType from \"src/types\";\r\n\r\nconst initialState = {\r\n  modes: null,\r\n  mode: \"\",\r\n  status: false,\r\n  history: [],\r\n};\r\n\r\nexport const reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionType.RESET_PROCESS: {\r\n      return {\r\n        ...state,\r\n        mode: \"\",\r\n        status: false,\r\n        history: [],\r\n      };\r\n    }\r\n\r\n    case actionType.SET_DATA: {\r\n      const { data } = payload;\r\n\r\n      return {\r\n        ...state,\r\n        modes: data,\r\n      };\r\n    }\r\n\r\n    case actionType.SET_MODE: {\r\n      const { mode } = payload;\r\n\r\n      return {\r\n        ...state,\r\n        mode,\r\n        history: [],\r\n      };\r\n    }\r\n\r\n    case actionType.SET_STATUS: {\r\n      const { status } = payload;\r\n\r\n      return {\r\n        ...state,\r\n        status,\r\n      };\r\n    }\r\n\r\n    case actionType.ADD_TO_HISTORY: {\r\n      const { text } = payload;\r\n      const history = [...state.history, text];\r\n\r\n      return {\r\n        ...state,\r\n        history,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/AppContainer\";\nimport { getStore } from \"src/store/index\";\n\nconst store = getStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { reducer } from \"src/reducer\";\r\n\r\nexport const getStore = () => {\r\n  const middleware = () => (next) => (action) => {\r\n    return next(action);\r\n  };\r\n  return createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk, middleware))\r\n  );\r\n};\r\n"],"sourceRoot":""}